BIG-IQ automated backup sample README
Original Document: 3/31/2014
Updates:


=========================
This system is designed to handle automated backup and pruning of the BIG-IPs managed by a BIG-IQ, and the BIG-IQ itself. It consists of three systems:
1. Installer
	- A bash file that sets up schedules in cron to run backups and pruning.
2, Pruner
	- A python script that prunes the existing list of backups.
3. Backup Worker 
	- A python script that creates new backups and copies them off of the BIG-IQ to a local location if desired

=========================
PREREQUISITES
1. Designed/tested on Ubuntu 12.04 LTS
2. Uses Python
3. requires the Python requests module

To get python and requests set up correctly (easy way):

sudo pip install requests

If it tells you requests is already installed, try sudo pip install requests --upgrade (CHECK SYSTEM DEPENDENCIES FIRST if this is not a dedicated test machine)

That's it. You should be ready to run.

More detailed instructions are below with links to requests documentation.

=========================
Known limitations:
1. The installer only works on UNIX variants that run cron. It was designed and tested on Ubuntu, slight modifications may be required for other distributions.
2. The system requires the Python requests module. Instructions for installing requests are above.
3. There is not a ton of error _recovery_ in the scripts, merely logging of errors. Monitoring of the log file or modifications to error handling should be considerations based upon install environment.
4. Since login information is required to call APIs, credentials will be in plain text in cron. For a sample this is fully acceptable, for a production environment, it is generally not. Modifications to suit the environment are recommended if being installed in production.
5. These python scripts were developed using python 2.7.6. The install scripts use "which python" to determine where the python executable is. Please validate that the scripts (and the requests module) work correctly with the version returned by "which python" in your environment... or change the line PYTHON=$(which python) to point at the correct python variant in your environment.
6. To keep the scripts simple and execution time down, we do not poll for successful completion of backups. This will not be suited to use in a production environment. Comments in the backup script guide interested parties to add polling.
7. If the backup script is run twice in a given day, it will fail to run the second backup, merely noting it was already completed. For testing purposes it might be desirable to add a name-modification scheme and try the backup again in this scenario.




=========================
Installing requests. 

The following links will take you to the documentation and install information for the requests module. Note that requests is included in 12.04 LTS, but it is out of date, and even upgrade/update will not get it to a useful version. Please follow the directions linked below.

Python requests is a module that allows python to handle REST based APIs better than the built-in methods of urllib and urllib2. It is available as a wheel file from: 
http://docs.python-requests.org/en/latest/
http://docs.python-requests.org/en/latest/user/install/#install

Wheel files are installed via another python add-on named pip. Links to pip and installation are available at the links above. For Windows developers, it is useful to install pip via pip-win (a Windows executable that makes retargeting pip to different python versions simple). Pip-win can be found at: 
https://sites.google.com/site/pydatalog/python/pip-for-windows

=========================
Installer - Use
The installer is a prompting bash file that simply collects all the information required to create one cron job for each python script. If you are accustomed to scheduling cron jobs, it might be most useful to simply run each script with no parameters to get the list of required information, and then create the lines in the relevant cron files yourself. The same can be done on Windows with at.

